swagger: "2.0"
info:
  title: Workflow Manager
  version: 2.0.0
produces:
  - application/json
consumes:
  - application/json
schemes:
  - http
paths:
  /ping:
    get:
      operationId: ping
      summary: "ping the versions API server"
      responses:
        200:
          description: server ping success
        default:
          description: unexpected error
  /v3/versions/{train}/{component}/{release}:
    parameters:
      - $ref: "#/parameters/trainParam"
      - $ref: "#/parameters/componentParam"
      - $ref: "#/parameters/releaseParam"
    get:
      operationId: getComponentByRelease
      summary: "read the specified release of a component"
      responses:
        200:
          description: component release response
          schema:
            $ref: "#/definitions/componentVersion"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
    post:
      operationId: publishComponentRelease
      summary: "publish a new release for the component"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/componentVersion"
      responses:
        200:
          description: publish component release response
          schema:
            $ref: "#/definitions/componentVersion"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/doctor/{uuid}:
    parameters:
      - $ref: "#/parameters/UUID"
    get:
      operationId: getDoctorInfo
      summary: "get the specified doctor report as per UUID"
      security:
        - basic: []
      responses:
        200:
          description: doctor get response
          schema:
            $ref: "#/definitions/doctorInfo"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
    post:
      operationId: publishDoctorInfo
      summary: "publish doctor info to Workflow Manager API"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/doctorInfo"
      responses:
        200:
          description: publish doctorInfo response
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/versions/{train}/{component}:
    get:
      operationId: getComponentByName
      summary: "list the releases of a component"
      parameters:
        - $ref: "#/parameters/trainParam"
        - $ref: "#/parameters/componentParam"
      responses:
        200:
          description: component releases response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/componentVersion"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/versions/latest:
    post:
      operationId: getComponentsByLatestRelease
      summary: "list the latest release version of the components"
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/componentVersion"
      responses:
        200:
          description: component releases response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/componentVersion"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/clusters/count:
    get:
      operationId: getClustersCount
      summary: "read the count of the known drycc clusters"
      responses:
        200:
          description: clusters count response
          schema:
            type: integer
            format: int64
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/clusters/age:
    get:
      operationId: getClustersByAge
      summary: "list clusters"
      parameters:
        - name: checked_in_before
          in: query
          type: string
          format: date-time
        - name: checked_in_after
          in: query
          type: string
          format: date-time
        - name: created_before
          in: query
          type: string
          format: date-time
        - name: created_after
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: clusters details response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/cluster"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/clusters/checkins:
    get:
      operationId: getClusterCheckins
      summary: "get cluster checkins"
      parameters:
        - name: created_after
          in: query
          type: string
          format: date-time
        - name: created_before
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: clusters count response
          schema:
            type: object
            $ref: "#/definitions/clustersCount"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/clusters/persistent:
    get:
      operationId: getPersistentClusters
      summary: "get persistent clusters"
      parameters:
        - name: epoch
          in: query
          type: string
          format: date-time
        - name: timestamp
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: clusters details response
          schema:
            type: object
            $ref: "#/definitions/clustersCount"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/clusters/{id}:
    get:
      operationId: getClusterById
      summary: "read a cluster details"
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: clusters details response
          schema:
            $ref: "#/definitions/cluster"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v3/clusters:
    post:
      operationId: createClusterDetails
      summary: "create a cluster with all components"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/cluster"
      responses:
        200:
          description: clusters details response
          schema:
            $ref: "#/definitions/cluster"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v2/versions/latest:
    post:
      operationId: getComponentsByLatestReleaseForV2
      summary: "list the latest release version of the components.This endpoint is to support old clients"
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/componentVersion"
      responses:
        200:
          description: component releases response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/componentVersion"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
  /v2/clusters/{id}:
    post:
      operationId: createClusterDetailsForV2
      summary: "create a cluster with all components.This endpoint is to support old clients"
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/cluster"
      responses:
        200:
          description: clusters details response
          schema:
            $ref: "#/definitions/cluster"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/error"
parameters:
  trainParam:
    name: train
    in: path
    type: string
    description: A train is a release cadence type, e.g., "beta" or "stable"
    required: true
  componentParam:
    name: component
    type: string
    in: path
    description: A component is a single drycc component, e.g., drycc-router
    required: true
  releaseParam:
    name: release
    type: string
    in: path
    description: The release version of the drycc component, eg., 2.0.0-beta2
    required: true
  UUID:
    name: uuid
    type: string
    in: path
    description: A universal Id to represent a sepcific request or report
    required: true
securityDefinitions:
  basic:
    type: basic
definitions:
  cluster:
    type: object
    required:
      - id
      - components
    properties:
      id:
        type: string
        minLength: 1
      firstSeen:
        type: string
        format: date-time
      lastSeen:
        type: string
        format: date-time
      components:
        type: array
        items:
          $ref: "#/definitions/componentVersion"
  clusterCheckin:
    type: object
    required:
      - clusterID
      - firstSeen
      - lastSeen
      - clusterAge
      - checkins
    properties:
      clusterID:
        type: string
        minLength: 1
      firstSeen:
        type: string
        minLength: 1
      lastSeen:
        type: string
        minLength: 1
      clusterAge:
        type: string
        minLength: 1
      lastCheckin:
        type: string
        minLength: 1
      checkins:
        type: integer
  clustersCount:
    type: object
    properties:
      count:
        type: integer
        format: int64
      data:
        type: array
        items:
          $ref: "#/definitions/clusterCheckin"
  k8sResource:
    type: object
    required:
      - data
    properties:
      data:
        type: object
  namespace:
    type: object
    required:
      - name
      - daemonSets
      - deployments
      - events
      - pods
      - replicaSets
      - replicationControllers
      - services
    properties:
      name:
        type: string
      daemonSets:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
      deployments:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
      events:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
      pods:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
      replicaSets:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
      replicationControllers:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
      services:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
  doctorInfo:
    type: object
    required:
      - workflow
      - nodes
      - namespaces
    properties:
      workflow:
        $ref: "#/definitions/cluster"
      nodes:
        type: array
        items:
          $ref: "#/definitions/k8sResource"
      namespaces:
        type: array
        items:
          $ref: "#/definitions/namespace"
  componentVersion:
    type: object
    properties:
      component:
        $ref: "#/definitions/component"
      version:
        $ref: "#/definitions/version"
      updateAvailable:
        type: string
  component:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        minLength: 1
      description:
        type: string
      type:
        type: string
  version:
    type: object
    properties:
      train:
        type: string
        minLength: 1
      version:
        type: string
        minLength: 1
      released:
        type: string
        minLength: 1
      data:
        $ref: "#/definitions/versionData"
  versionData:
    type: object
    properties:
      description:
        type: string
        minLength: 1
      fixes:
        type: string
        minLength: 1
      image:
        type: string
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
