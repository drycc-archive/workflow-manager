package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/drycc/workflow-manager/pkg/swagger/models"
)

// PublishDoctorInfoReader is a Reader for the PublishDoctorInfo structure.
type PublishDoctorInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PublishDoctorInfoReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPublishDoctorInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPublishDoctorInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPublishDoctorInfoOK creates a PublishDoctorInfoOK with default headers values
func NewPublishDoctorInfoOK() *PublishDoctorInfoOK {
	return &PublishDoctorInfoOK{}
}

/*PublishDoctorInfoOK handles this case with default header values.

publish doctorInfo response
*/
type PublishDoctorInfoOK struct {
}

func (o *PublishDoctorInfoOK) Error() string {
	return fmt.Sprintf("[POST /v3/doctor/{uuid}][%d] publishDoctorInfoOK ", 200)
}

func (o *PublishDoctorInfoOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPublishDoctorInfoDefault creates a PublishDoctorInfoDefault with default headers values
func NewPublishDoctorInfoDefault(code int) *PublishDoctorInfoDefault {
	return &PublishDoctorInfoDefault{
		_statusCode: code,
	}
}

/*PublishDoctorInfoDefault handles this case with default header values.

unexpected error
*/
type PublishDoctorInfoDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the publish doctor info default response
func (o *PublishDoctorInfoDefault) Code() int {
	return o._statusCode
}

func (o *PublishDoctorInfoDefault) Error() string {
	return fmt.Sprintf("[POST /v3/doctor/{uuid}][%d] publishDoctorInfo default  %+v", o._statusCode, o.Payload)
}

func (o *PublishDoctorInfoDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
