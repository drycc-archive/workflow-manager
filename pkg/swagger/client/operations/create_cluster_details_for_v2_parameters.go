package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/drycc/workflow-manager/pkg/swagger/models"
)

// NewCreateClusterDetailsForV2Params creates a new CreateClusterDetailsForV2Params object
// with the default values initialized.
func NewCreateClusterDetailsForV2Params() *CreateClusterDetailsForV2Params {
	var ()
	return &CreateClusterDetailsForV2Params{}
}

/*CreateClusterDetailsForV2Params contains all the parameters to send to the API endpoint
for the create cluster details for v2 operation typically these are written to a http.Request
*/
type CreateClusterDetailsForV2Params struct {

	/*Body*/
	Body *models.Cluster
	/*ID*/
	ID string
}

// WithBody adds the body to the create cluster details for v2 params
func (o *CreateClusterDetailsForV2Params) WithBody(body *models.Cluster) *CreateClusterDetailsForV2Params {
	o.Body = body
	return o
}

// WithID adds the id to the create cluster details for v2 params
func (o *CreateClusterDetailsForV2Params) WithID(id string) *CreateClusterDetailsForV2Params {
	o.ID = id
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *CreateClusterDetailsForV2Params) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	if o.Body == nil {
		o.Body = new(models.Cluster)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
